@using Microsoft.AspNetCore.Components.Authorization
@inherits LayoutComponentBase

<MudThemeProvider Theme="currentTheme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Color="Color.Surface" Fixed="true" Elevation="2">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" OnClick="ToggleDrawer" />
        <MudImage Src="images/afs.png"></MudImage>
        <MudSpacer />
        <AuthorizeView>
            <Authorized>
                <MudAvatar Color="Color.Default">
                    <MudIcon Icon="@Icons.Material.Filled.Person"></MudIcon>
                </MudAvatar>
                <MudButton Class="ml-4" OnClick="Logout" Variant="Variant.Outlined" Color="Color.Default">Logout</MudButton>
            </Authorized>
            <NotAuthorized>
                <MudButton Class="ml-4" Href="login" Variant="Variant.Outlined" Color="Color.Default">Login</MudButton>
            </NotAuthorized>
        </AuthorizeView>
    </MudAppBar>
    <MudDrawer Open="@drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu></NavMenu>
    </MudDrawer>
    <MudMainContent class="main-content pa-10">
        @Body
    </MudMainContent>
</MudLayout>

@code {
    private bool drawerOpen = true;
    private MudTheme currentTheme = new MudTheme()
        {
            Palette = AFSPallete.CreatePallete
        };

    [Inject]
    public NavigationManager? NavigationManager { get; set; }

    [Inject]
    public AuthenticationStateProvider? AuthenticationStateProvider { get; set; }

    private void ToggleDrawer()
    {
        drawerOpen = !drawerOpen;
    }

    private async Task Logout()
    {
        if (AuthenticationStateProvider is LoginAPI authAPI)
        {
            await authAPI.LogoutAsync();
            NavigationManager!.NavigateTo("login");
        }
    }
}
