@using System.Security.Claims
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject LoginAPI loginAPI
<link href="https://use.fontawesome.com/releases/v5.14.0/css/all.css" rel="stylesheet">
@inject NavigationManager NavigationManager

<AuthorizeView>
    <Authorized>
        <MudPaper Width="250px" Class="d-inline-flex py-3" Elevation="0" Style="color:#fff; background-color:#008000">
        <MudNavMenu Class="mud-width-full" Color="Color.Primary">
            <MudText Typo="Typo.h6" Class="px-4" Style="color:white;">Olá, @authState.User.Identity.Name</MudText>
            <MudText Typo="Typo.body2" Class="px-4 mud-text-primary" Style="color:white;">Sistema de Agendamento AFS</MudText>
            <MudDivider Class="my-2" />
            @if (roles.Contains("Admin"))
            {

                    <MudNavLink Href="/admin/home" Icon="@Icons.Material.Filled.Home" Style="color:white;">Home</MudNavLink>
                    <MudNavGroup Title="Professores" Icon="@Icons.Material.Filled.People" Style="color:white;" Expanded="true">
                        <MudNavLink Href="/admin/professores" Icon="@Icons.Material.Filled.People" Style="color:white;">Professores Cadastrados</MudNavLink>
                    <MudNavLink Href="/admin/professores/cadastrar" Icon="@Icons.Material.Filled.PersonAdd" IconColor="Color.Default">Cadastrar Professores</MudNavLink>
                </MudNavGroup>
                <MudNavGroup Title="Equipamentos" Icon="@Icons.Material.Filled.Tv" Expanded="true">
                        <MudNavLink Href="/admin/equipamentos" Icon="@Icons.Material.Filled.Tv" Style="color:white;">Equipamentos Cadastrados</MudNavLink>
                        <MudNavLink Href="/admin/equipamentos/cadastrar" Icon="@Icons.Material.Filled.AddBox" Style="color:white;">Cadastrar Professores</MudNavLink>
                </MudNavGroup>
                    <MudNavGroup Title="Agendamentos" Icon="@Icons.Material.Filled.CalendarToday" Expanded="true">
                        <MudNavLink Href="/admin/agendamentos" Icon="@Icons.Material.Filled.CalendarViewMonth" Style="color:white;">Vizualizar Agendamentos</MudNavLink>  
                    </MudNavGroup>

            }
            else if (roles.Contains("Professores"))
            {
                <MudNavGroup Title="Professor" Expanded="true">
                    <MudNavLink Href="/admin/home" Icon="@Icons.Material.Filled.Home">Home</MudNavLink>
                    <MudNavGroup Title="Equipamentos" Expanded="true">
                        <MudNavLink Href="/admin/equipamentos">Equipamentos Cadastrados</MudNavLink>
                        <MudNavLink Href="/admin/equipamentos/cadastrar">Cadastrar Equipamentos</MudNavLink>
                    </MudNavGroup>
                </MudNavGroup>
            }
            </MudNavMenu>
        </MudPaper>
    </Authorized>
    <NotAuthorized>
        @{
            NavigationManager.NavigateTo("/auth/login");
        }
    </NotAuthorized>
</AuthorizeView>


@code {
    private AuthenticationState? authState;
    private List<string> roles = new List<string>();

    protected override async Task OnInitializedAsync()
    {
        authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            roles = await loginAPI.GetUserRolesAsync(user.Identity.Name);
        }
    }
}
