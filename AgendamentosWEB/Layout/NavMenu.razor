@using System.Security.Claims
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject LoginAPI loginAPI

<AuthorizeView>
    <Authorized>
        <MudContainer Style="margin-top: 50px;">
            <MudText Typo="Typo.h6" Class="px-4" Style="color:white;">Olá, @authState.User.Identity.Name</MudText>
            <MudText Typo="Typo.body2" Class="px-4 mud-text-secondary" Style="color:white;">Sistema de Agendamento AFS</MudText>
            <MudDivider Class="my-2" />
            @if (roles.Contains("Admin"))
            {
                <MudNavGroup Title="Admin" Expanded="true">
                    <MudNavLink Href="/admin/home" Icon="@Icons.Material.Filled.Home">Home</MudNavLink>
                    <MudNavGroup Title="Equipamentos" Expanded="true">
                        <MudNavLink Href="/admin/equipamentos">Equipamentos Cadastrados</MudNavLink>
                        <MudNavLink Href="/admin/equipamentos/cadastrar">Cadastrar Equipamentos</MudNavLink>
                    </MudNavGroup>
                    <MudNavGroup Title="Profesores" Expanded="true">
                        <MudNavLink Href="/admin/professores">Professores Cadastrados</MudNavLink>
                        <MudNavLink Href="/admin/professores/cadastrar">Cadastrar Professores</MudNavLink>
                    </MudNavGroup>
                </MudNavGroup>
            }
            else if (roles.Contains("Professor"))
            {
                <MudNavGroup Title="Professor" Expanded="true">
                    <MudNavLink Href="/admin/home" Icon="@Icons.Material.Filled.Home">Home</MudNavLink>
                    <MudNavGroup Title="Equipamentos" Expanded="true">
                        <MudNavLink Href="/admin/equipamentos">Equipamentos Cadastrados</MudNavLink>
                        <MudNavLink Href="/admin/equipamentos/cadastrar">Cadastrar Equipamentos</MudNavLink>
                    </MudNavGroup>
                </MudNavGroup>
            }
        </MudContainer>
    </Authorized>
    <NotAuthorized>
        <RedirectToLogin />
    </NotAuthorized>
</AuthorizeView>


@code {
    private AuthenticationState? authState;
    private List<string> roles = new List<string>();

    protected override async Task OnInitializedAsync()
    {
        authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            roles = await loginAPI.GetUserRolesAsync(user.Identity.Name);
        }
    }
}
