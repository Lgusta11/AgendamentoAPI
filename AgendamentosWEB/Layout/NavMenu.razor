@using System.Security.Claims
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject LoginAPI loginAPI
<link href="https://use.fontawesome.com/releases/v5.14.0/css/all.css" rel="stylesheet">
@inject NavigationManager NavigationManager

<AuthorizeView>
    <Authorized>
        <MudPaper Width="250px" Class="d-inline-flex py-3" Elevation="0" Style="color:#fff; background-color:#008000">
            <MudNavMenu Class="mud-width-full" Color="Color.Primary">
                @if (authState?.User?.Identity?.Name != null)
                {
                    <MudText Typo="Typo.h6" Class="px-4" Style="color:white;">Olá, @authState.User.Identity.Name</MudText>
                    <MudText Typo="Typo.body2" Class="px-4 mud-text-primary" Style="color:white;">Sistema de Agendamento AFS</MudText>
                    <MudDivider Class="my-2" />
                    @if (roleInfo != null && roleInfo.Equals("Gestor"))
                    {
                        <MudNavLink Href="/admin/home" Icon="@Icons.Material.Filled.Home" Style="color:white;">Home</MudNavLink>
                        <MudNavGroup Title="Professores" Icon="@Icons.Material.Filled.People" Style="color:white;" Expanded="true">
                            <MudNavLink Href="/admin/professores" Icon="@Icons.Material.Filled.People" Style="color:white;">Professores Cadastrados</MudNavLink>
                            <MudNavLink Href="/admin/professores/cadastrar" Icon="@Icons.Material.Filled.PersonAdd" IconColor="Color.Default">Cadastrar Professores</MudNavLink>
                        </MudNavGroup>
                        <MudNavGroup Title="Equipamentos" Icon="@Icons.Material.Filled.Tv" Expanded="true">
                            <MudNavLink Href="/admin/equipamentos" Icon="@Icons.Material.Filled.Tv" Style="color:white;">Equipamentos Cadastrados</MudNavLink>
                            <MudNavLink Href="/admin/equipamentos/cadastrar" Icon="@Icons.Material.Filled.AddBox" Style="color:white;">Cadastrar Equipamento</MudNavLink>
                        </MudNavGroup>
                        <MudNavGroup Title="Agendamentos" Icon="@Icons.Material.Filled.CalendarToday" Expanded="true">
                            <MudNavLink Href="/admin/agendamentos" Icon="@Icons.Material.Filled.CalendarViewMonth" Style="color:white;">Vizualizar Agendamentos</MudNavLink>
                            <MudNavLink Href="/admin/agendamentos/cadastrar" Icon="@Icons.Material.Filled.AddCircle" Style="color:white;">Realizar Agendamento</MudNavLink>
                        </MudNavGroup>
                    }
                    else if (roleInfo != null && roleInfo.Equals("Professor"))
                    {
                        <MudNavLink Href="/home" Icon="@Icons.Material.Filled.Home" Style="color:white;">Home</MudNavLink>
                        <MudNavGroup Title="Agendamentos" Icon="@Icons.Material.Filled.CalendarToday" Expanded="true">
                            <MudNavLink Href="/agendamentos" Icon="@Icons.Material.Filled.CalendarViewMonth" Style="color:white;">Meus Agendamentos</MudNavLink>
                            <MudNavLink Href="/agendar" Icon="@Icons.Material.Filled.AddCircle" Style="color:white;">Realizar Agendamento</MudNavLink>
                        </MudNavGroup>
                    }
                }
            </MudNavMenu>
        </MudPaper>
    </Authorized>
    <NotAuthorized>
        @{
            NavigationManager.NavigateTo("/auth/login");
        }
    </NotAuthorized>
</AuthorizeView>

@code {
    private AuthenticationState? authState;
    private string? roleInfo;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var user = authState?.User;

            if (user?.Identity?.IsAuthenticated == true)
            {
                var role = await loginAPI.GetUserRolesAsync();

                roleInfo = role?.NivelAcesso;
            }
        }
        catch (Exception ex)
        {
            // Log the error
            Console.WriteLine($"Erro ao obter estado de autenticação: {ex.Message}");
        }
    }
}
