@page "/admin/professores/cadastrar"
@using MudBlazor
@inject HttpClient _httpClient
@inject IJSRuntime JS
@inject CadastroAPI professoresAPI

<MudPaper Elevation="2" Class="pa-5">
    <MudForm>
        <MudTextField @bind-Value="professor.nome" Label="Nome" Variant="Variant.Text" FullWidth />
        <MudTextField @bind-Value="professor.email" Label="Email" Variant="Variant.Text" FullWidth />
        <MudTextField @bind-Value="professor.senha" Label="Senha" Variant="Variant.Text" FullWidth InputType="InputType.Password" />
        <MudTextField @bind-Value="professor.confirmacaoSenha" Label="Confirmação de Senha" Variant="Variant.Text" FullWidth InputType="InputType.Password" />
        <MudButton Color="Color.Primary" Variant="Variant.Filled" @onclick="CadastrarProfessor">Cadastrar</MudButton>
    </MudForm>
</MudPaper>

@code {
    ProfessoresRequest professor = new ProfessoresRequest();
    string apiError = string.Empty;

    [Inject] ISnackbar? Snackbar { get; set; }

    private async Task CadastrarProfessor()
    {
        // Validações antes de enviar a solicitação
        if (string.IsNullOrWhiteSpace(professor.nome))
        {
            apiError = "O campo Nome é obrigatório.";
            return;
        }

        if (string.IsNullOrWhiteSpace(professor.email) || !professor.email.Contains("@"))
        {
            apiError = "Por favor, insira um endereço de e-mail válido.";
            return;
        }

        if (string.IsNullOrWhiteSpace(professor.senha) || professor.senha.Length < 6)
        {
            apiError = "A senha deve ter pelo menos 6 caracteres.";
            return;
        }

        if (professor.senha != professor.confirmacaoSenha)
        {
            apiError = "A senha e a confirmação de senha não correspondem.";
            return;
        }

        // Enviar a solicitação para a API
        var response = await professoresAPI.CadastroProfessorAsync(professor);
        if (response != null)
        {
            // Aqui você pode lidar com a resposta bem-sucedida, por exemplo, mostrar uma mensagem de sucesso
            Snackbar.Add("Professor cadastrado com sucesso!", Severity.Success);
        }
        else
        {
            apiError = "Erro ao cadastrar professor.";
            // Aqui você pode lidar com a resposta de erro, por exemplo, mostrar uma mensagem de erro
            Snackbar.Add(apiError, Severity.Error);
        }
    }
}



