@page "/admin/professores/cadastrar"
@using MudBlazor
@inject HttpClient _httpClient
@inject IJSRuntime JS




<MudPaper Elevation="2" Class="pa-5">
    <MudForm>
        <MudTextField @bind-Value="professor.Nome" Label="Nome" Variant="Variant.Text" FullWidth />
        <MudTextField @bind-Value="professor.Email" Label="Email" Variant="Variant.Text" FullWidth />
        <MudTextField @bind-Value="professor.Senha" Label="Senha" Variant="Variant.Text" FullWidth InputType="InputType.Password" />
        <MudTextField @bind-Value="professor.ConfirmacaoSenha" Label="Confirmação de Senha" Variant="Variant.Text" FullWidth InputType="InputType.Password" />
        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="CadastrarProfessor">Cadastrar</MudButton>
    </MudForm>
</MudPaper>

@code {
    ProfessoresRequest professor = new ProfessoresRequest();
    string apiError = string.Empty;

    private async Task CadastrarProfessor()
    {
        try
        {
            var response = await _httpClient.PostAsJsonAsync("auth/Cadastro/Professor", professor);
            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<ProfessoresResponse>();
                if (result != null)
                {
                    await JS.InvokeVoidAsync("alert", "Professor cadastrado com sucesso!");
                    professor = new ProfessoresRequest(); // Reset the form
                    apiError = string.Empty;
                }
            }
            else
            {
                apiError = "Erro ao cadastrar o professor: " + response.StatusCode;
            }
        }
        catch (Exception ex)
        {
            apiError = "Erro ao cadastrar o professor: " + ex.Message;
        }
    }
}
