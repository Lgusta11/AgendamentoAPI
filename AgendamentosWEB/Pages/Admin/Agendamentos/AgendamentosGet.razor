@inject AgendamentosAPI agendamentosAPI
@inject NavigationManager Navigation
@page "/admin/agendamentos"

@if (agendamentos == null)
{
    <p>Carregando agendamentos...</p>
}
else
{
    foreach (var agendamento in agendamentos.Skip((currentPage - 1) * 4).Take(4))
    {
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">@agendamento.ProfessorNome</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudText>Aula: @agendamento.NomeAula</MudText>
                <MudText>Equipamento: @agendamento.NomeEquipamento</MudText>
                <MudText>Data: @agendamento.Data.ToString("dd/MM/yyyy")</MudText>
            </MudCardContent>
        </MudCard>
    }

    <MudPagination Variant="Variant.Filled" Count="((agendamentos.Count - 1) / 4) + 1" @bind-CurrentPage="currentPage" />
}

@code {
    private ICollection<AgendamentoResponse>? agendamentos;
    private int currentPage = 1;

    protected override async Task OnInitializedAsync()
    {
        agendamentos = await agendamentosAPI.GetAgendamentosAsync();
    }
}