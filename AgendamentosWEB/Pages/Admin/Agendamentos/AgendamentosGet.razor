@inject AgendamentosAPI agendamentosAPI
@inject NavigationManager Navigation
@page "/admin/agendamentos"

<MudStack Class="mt-4 mb-4" Row="true" Justify="Justify.SpaceBetween">
    <MudText Class="mb-4" Typo="Typo.h4">Agendamentos cadastrados</MudText>
    <MudPagination Count="@totalPaginas" SelectedChanged="PaginaMudou"></MudPagination>
</MudStack>

@if (agendamentos == null)
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
}
else
{
    <MudGrid>
        @foreach (var agendamento in agendamentos)
        {
             <MudItem xs="12" sm="6" md="4" lg="3" xl="2">
            <MudCard>
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">@agendamento.ProfessorNome</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <MudText>Aula: @agendamento.NomeAula</MudText>
                    <MudText>Equipamento: @agendamento.NomeEquipamento</MudText>
                    <MudText>Data: @agendamento.Data.ToString("dd/MM/yyyy")</MudText>
                </MudCardContent>
            </MudCard>
            </MudItem>
        }
    </MudGrid>
}

@code {
    private ICollection<AgendamentoResponse>? agendamentos;
    private int currentPage = 1;
    private int tamanho = 12;
    private int totalItens;
    private int totalPaginas;
    private ICollection<AgendamentoResponse>? listaCompleta = Enumerable.Empty<AgendamentoResponse>().ToList();

    protected override async Task OnInitializedAsync()
    {
        listaCompleta = await agendamentosAPI.GetAgendamentosAsync();
        if (listaCompleta is not null)
        {
            listaCompleta = listaCompleta.OrderByDescending(a => a.Id).ToList();
            totalItens = listaCompleta.Count();
            totalPaginas = Convert.ToInt32(Math.Ceiling((totalItens * 1.0) / tamanho));
            this.PaginaMudou(1);
        }
    }

    private void PaginaMudou(int pageNumber)
    {
        var indice = pageNumber - 1;
        agendamentos = listaCompleta!
            .Skip(tamanho * indice)
            .Take(tamanho)
            .ToList();
    }
}
