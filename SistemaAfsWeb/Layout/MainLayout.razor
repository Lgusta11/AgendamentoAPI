@using Microsoft.AspNetCore.Components.Authorization
@inherits LayoutComponentBase

<MudThemeProvider Theme="currentTheme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Style="background-color: #008000;" Fixed="true" Elevation="2">
        @if (!NavigationManager!.Uri.Contains("/auth/login"))
        {
            <MudIconButton Icon="@Icons.Material.Filled.Menu" OnClick="ToggleDrawer" Style="color: white;" />
            <div style="flex-grow: 1;" DisableOverlay="true"></div>
        }
        <MudImage Class="mud-image" Src="images/afs.png" Style="max-width: 100px; height: auto;"></MudImage>
        <div style="flex-grow: 1;"></div>
        <AuthorizeView>
            <Authorized>
             
                <MudButton Class="ml-4" OnClick="Logout" Variant="@MudBlazor.Variant.Outlined" Style="color: white;">Logout</MudButton>
            </Authorized>
            <NotAuthorized>
                <MudButton Class="ml-4" Href="auth/login" Variant="@MudBlazor.Variant.Outlined" Style="color: white;" >Login</MudButton>
            </NotAuthorized>
        </AuthorizeView>
    </MudAppBar>
    @if (!NavigationManager!.Uri.Contains("/auth/login"))
    {
        <MudDrawer Open="@drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2" Color="Color.Primary">
            <NavMenu></NavMenu>
        </MudDrawer>
    }
    <MudMainContent class="main-content pa-10" Style="background-color: #fff;">
        @Body
    </MudMainContent>

</MudLayout>

@code {
    private bool drawerOpen = true;
    private MudTheme currentTheme = new MudTheme()
        {
            Palette = AFSPallete.CreatePallete
        };

    [Inject]
    public NavigationManager? NavigationManager { get; set; }

    [Inject]
    public AuthenticationStateProvider? AuthenticationStateProvider { get; set; }

    private void ToggleDrawer()
    {
        drawerOpen = !drawerOpen;
    }

    private async Task Logout()
    {
        if (AuthenticationStateProvider is LoginAPI authAPI)
        {
            await authAPI.LogoutAsync();
            NavigationManager!.NavigateTo("/auth/login");
        }
    }
}
